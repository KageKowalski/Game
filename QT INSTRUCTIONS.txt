Download QT Community here:
https://www1.qt.io/download-open-source/

Takes a LONG TIME to download.
In the installer, do NOT install every version of Qt--you only need the latest.
That's already like a LOT of memory.

Once downloaded, launch Qt Creator, Qt's designated IDE.
You're going to have a difficult time setting up a project.
To do it properly, do this:
* New Project
* Qt Console Application
* Give it a name
* qmake
* I don't understand what the kits are for... so just select them all
* Skip version control, hit Finish!

Follow some of the following tutorials on the basics to get a feel for it.
(Perferably skip the Introduction section):
http://zetcode.com/gui/qt5/

Right-click your project and hit Build then Run. If you're having issues, check the .pro file that was generated for you. It's your project's configuration file (sort of). You're going to want to learn more about .pro files and qmake, so you should definitely read this article or at least some of it:
http://doc.qt.io/archives/qt-4.8/qmake-project-files.html

Here's an example of a .pro file I made for one of the tutorials on zetcode.com:
[CODE START HERE]
SOURCES += main.cpp				<-- Add your source (.cpp) files
CONFIG += qt					<-- Add qt
QT += gui core					<-- We're using qt's GUI and CORE libraries
greaterThan(QT_MAJOR_VERSION, 4): QT += widgets <-- If we're running a valid version of Qt, append Qt's Widgets library as well
TARGET = untitled				<-- Your project's name (mine was generic "untitled")
TEMPLATE = app					<-- This will always be app--you can read on the other possibilies on the article
[CODE END]

What we're really going to need to use for the game is something called Qt Quick, which should've
been downloaded along with Qt5 for you. Qt Quick is a more performant version of Qt, with more
fluid/dynamic components to it, perfect for video games.

Qt Quick is different than Qt5, but we should learn at least the basics of Qt5 before
moving on to Qt Quick, since I believe (not sure) they use the same programming paradigm
(slot/signal concept, etc).

Here's a great article to read (IT'S VERY IMPORTANT) explaining Qt's primary
nuanc--slots and signals:
http://doc.qt.io/qt-5/signalsandslots.html